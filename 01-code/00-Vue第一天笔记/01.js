/**
 * 
 * JavaScript库:
 * 有一个js文件,内部封装了大量的js的函数,可以实现相关的一些操作或者功能.称为:js函数库,简称:js库
 * 
 * JavaScript框架:
 * 有一个js文件,该文件内部可能会引入其他的js文件,文件中封装了大量的对象,或者js的函数,实现了更多更强大的功能,可以理解为是一个强大的功能箱,该文件可以理解为js的框架
 * 
 * 
 * JavaScript常见的框架:
 * Vue: 渐进式的JavaScript框架
 * React:
 * Angular:
 * 以上三个框架,目前用户量或者说支持两,或者说最流行的是:Vue
 * 
 * 渐进式:本身Vue框架实现的功能是有限的,但是和该框架相关联的插件或者包有很多,只需要安装或者引入相关的插件或者包,即可实现更多的功能
 * 
 * 
 * Vue可以做什么?
 * 用于构建用户界面(user interface)的渐进式框架
 * 搭建界面的
 * Vue的作者:尤雨溪
 * React的团队:Facebook 
 * Angular的维护团队: Google 维护
 * 
 * Vue的特点:
 * 简单易用,广泛灵活,性能高效    来自于Vue的中文官方文档
 * 另外的几个特点,是来自于React和Angular,这几个特点也是面试的时候常常会问到的问题(面试题)
 * 1)	借鉴angular的模板和数据绑定技术
 * 2)	借鉴react的组件化和虚拟DOM技术
 * 
 *
 * 
 * 
 * Vue框架有自己的js文件,引入,然后使用,最终页面有相关的效果(内部具体如何实现的?---Vue源码分析的课上讲解(MVVM))
 * Vue的这个框架如何的使用,本身提供了相关的js文件,在页面红引入该框架相关的js文件,直接使用即可
 * 1. 通过在线的方式引入Vue.js文件
 * 2. 通过把Vue的js文件下载到本地,然后引入的方式使用
 * 3. 通过Vue的脚手架的方式进行开发即可
 * Vue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用的 ECMAScript 5 特性在 IE8 无法模拟。Vue.js 支持所有兼容 
 * ECMAScript 5 的浏览器。
 * 
 * Vue的整体课程的介绍:
 * 1. Vue的基础内容-----7-8天
 *     Vue的基础内容 模版语法,指令,数据绑定,事件绑定,vue-router路由器,Vuex 源码的分析,相关的插件的使用
 * 2. Vue的前台电商项目----9-10天
 * 3. Vue的后台电商管理项目----5-6天
 * 周四和周日是不上课,进行补课操作
 * 
 * MVVM的理解: 是一种模式,这种模式主要是视图和数据进行关联
 * M: Model---数据
 * V:View----视图
 * VM:Vue的实例 
 * 
 * 通过Vue的实例对象把视图和数据进行关联
 * Vue是用来搭建页面(页面就是所谓的视图),页面中会用到一些相关的动态的数据,是通过Vue的实例来联系的
 * V(视图View)-------  VM(Vue的实例对象)  -----M(数据Model)
 * 
 * 
 * Vue的使用流程:Vue.js是一个js的渐进式的框架
 * 1. 引入vue.js文件
 *  1) 在线引入
 *  2) 通过下载Vue的源码,本地引入vue.js
 *  3) 通过Vue的脚手架
 * 2. 使用Vue的语法,
 * 3. 搭建页面,实现最终效果
 * 
 * 模版语法：
 * 模版；Vue是用来搭建界面的,就需要操作html的标签内容,获取html容器,容器中的所有的html及内容都是模版
 * 模版语法: 在html标签上使用Vue的相关的语法,操作页面
 * 
 * 
 * 总结Vue中的相关指令(面试题:说说Vue中常见的7个指令)
 * 
 * v-bind指令：
 *  作用:强制数据绑定,一般用在普通的标签中,设置该标签中某个属性的数据是动态的
 *  语法: v-bind:属性名字="表达式"   该表达式需要在data对象中定义
 *  简写: :属性名字="表达式"
 * 
 * v-on指令:
 *  作用: 绑定事件监听,一般用在标签绑定监听的时候使用
 *  语法: v-on:事件名字="回调函数"  回调函数需要在methods 对象中定义
 *  简写:   @事件名字="回调函数"
 * 
 * v-model指令:
 *  作用:双向数据绑定,一般用在表单标签中,
 *  语法:   v-model="表达式"  该表达式需要在data对象中定义
 * 
 * v-if指令:
 *  作用: 条件渲染指令,设置标签显示或者隐藏,大多数标签都可以使用
 *  语法:  v-if="表达式"   该表达式需要在data对象中定义  该表达式最终的结果应该是布尔类型
 *  使用该指令的标签在页面中可能显示可能隐藏,如果是隐藏,实际上在DOM树中是不存在的
 *  v-else:一般配合v-if指令使用,作用同上
 *  v-else-if : 一般配合v-if指令使用,作用同上
 * 
 * 
 * v-show指令:
 *  作用:条件渲染指令,设置标签显示或者隐藏,大多数标签都可以使用
 *  语法: v-show="表达式"   该表达式需要在data对象中定义  该表达式最终的结果应该是布尔类型
 *  使用该指令的标签在页面中可能显示可能隐藏,如果是隐藏,实际上控制的是该标签的style属性中的display属性,在DOM树中一直存在
 * 
 * 
 * 
 * ref 是一个属性,在DOM树中的作用是用来获取某个DOM元素的,但是需要通过$refs对象来获取,是单独的使用的
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */